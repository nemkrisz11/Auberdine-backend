version: '3'
services:
  flask:
    build:
      context: flaskapp
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "True"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: flaskpass
      MONGODB_HOSTNAME: mongodb
      MONGODB_PORT: 27017
      FLASKAPP_PATH: /var/www/flaskapp
      FLASKTEST_PATH: /var/www/test
      MONGOINIT_PATH: /var/www/mongoinit
    volumes:
      - ./flaskapp:/var/www/flaskapp:ro
      - ./test:/var/www/test
      - ./mongoinit:/var/www/mongoinit:ro
    depends_on:
      - mongodb
      - redis
    networks:
      backend:
        ipv4_address: 172.23.0.2

  mongodb:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: klqhweroiudslfkjqweilru234
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: flaskpass
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
      LOAD_MONGODB_DUMP: "false"
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./mongoinit:/docker-entrypoint-initdb.d/:ro
    networks:
      backend:
        ipv4_address: 172.23.0.3

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redisdata:/opt/redis
    networks:
      backend:
        ipv4_address: 172.23.0.4

  angular:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: angular
    restart: unless-stopped
    volumes:
      - angulardata:/usr/share/nginx/html
    depends_on:
      - mongodb
    networks:
      backend:
        ipv4_address: 172.23.0.5

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
      - ./cert:/etc/nginx/certs
    depends_on:
      - flask
      - angular
    networks:
      frontend:
        ipv4_address: 172.24.0.2
      backend:
        ipv4_address: 172.23.0.6

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16

volumes:
  mongodata:
    driver: local
  nginxdata:
    driver: local
  redisdata:
    driver: local
  angulardata:
    driver: local